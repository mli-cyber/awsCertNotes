Infrastructure as a Service (IaaS)
• Provide building blocks for cloud IT
• Provides networking, computers, data storage space
• Highest level of flexibility
• Easy parallel with traditional on-premises IT
Platform as a Service (PaaS)
• Removes the need for your organization to manage the underlying infrastructure
• Focus on the deployment and management of your applications
Software as a Service (SaaS)
• Completed product that is run and managed by the service provider

				|On-premises| IaaS 	| PaaS	| SaaS	|	
----------------|-----------|-------|-------|-------|
Applications	|		x	|	x	|	x	|		|
Data			|		x	|	x	|	x	|		|
Runtime			|		x	|	x	|		|		|
Middleware		|		x	|	x	|		|		|
O/S				|		x	|	x	|		|		|
Virtualization	|		x	|		|		|		|
Servers			|		x	|		|		|		|
Storage			|		x	|		|		|		|
Networking		|		x	|		|		|		|

IaaS: Amazon C2, GCP, Azure, Rackspae, Digital Ocean, Linode
PaaS: Elastic Beanstalk, Heroku, Google App Engine (GCP), Windows Azure
SaaS: Rekognition (for machineLearning), Google Apps, Dropbox, Zoom

-------------------------------------------------------------------
IAM = Identity and Access Management, Global service
-------------------------------------------------------------------

IAM: Users & Groups
• IAM = Identity and Access Management, Global service
• Root account created by default, shouldn’t be used or shared
• Users are people within your organization, and can be grouped
• Groups only contain users, not other groups
• Users don’t have to belong to a group, and user can belong to multiple groups


IAM Policies Structure
• Version: policy language version, always include “2012-10-17”
• Id: an identifier for the policy (optional)
• Statement: one or more individual statements (required)
• Statements consists of
• Sid: an identifier for the statement (optional)
• Effect: whether the statement allows or denies access (Allow, Deny)
• Principal: account/user/role to which this policy applied to
• Action: list of actions this policy allows or denies
• Resource: list of resources to which the actions applied to
• Condition: conditions for when this policy is in effect (optional)

• To access AWS, you have three options:
	• AWS Management Console (protected by password + MFA)
	• AWS Command Line Interface (CLI): protected by access keys
	• AWS Software Developer Kit (SDK) - for code: protected by access keys
• Access Keys are generated through the AWS Console
• Users manage their own access keys

https://github.com/aws/aws-cli

• AWS Software Development Kit (AWS SDK)
• Language-specific APIs (set of libraries)
• Enables you to access and manage AWS services programmatically
• Embedded within your application
• Supports
	• SDKs (JavaScript, Python, PHP, .NET, Ruby, Java, Go, Node.js, C++)
	• Mobile SDKs (Android, iOS, …)
	• IoT Device SDKs (Embedded C, Arduino, …)
• Example: AWS CLI is built on AWS SDK for Python

IAM Roles for Services
• Some AWS service will need to perform actions on your behalf
• To do so, we will assign
	permissions to AWS services with IAM Roles
• Common roles:
	• EC2 Instance Roles
	• Lambda Function Roles
	• Roles for CloudFormation.
	
IAM Guidelines & Best Practices
	• Don’t use the root account except for AWS account setup
	• One physical user = One AWS user
	• Assign users to groups and assign permissions to groups
	• Create a strong password policy
	• Use and enforce the use of Multi Factor Authentication (MFA)
	• Create and use Roles for giving permissions to AWS services
	• Use Access Keys for Programmatic Access (CLI / SDK)
	• Audit permissions of your account with the IAM Credentials Report
	• Never share IAM users & Access Keys
	
Shared Responsibility Model for IAM
AWS
• Infrastructure (global network security)
• Configuration and vulnerability analysis
• Compliance validation 
You
• Users, Groups, Roles, Policies management and monitoring
• Enable MFA on all accounts
• Rotate all your keys often
• Use IAM tools to apply appropriate permissions
• Analyze access patterns & review permissions

IAM Section – Summary
• Users: mapped to a physical user, has a password for AWS Console
• Groups: contains users only
• Policies: JSON document that outlines permissions for users or groups
• Roles: for EC2 instances or AWS services
• Security: MFA + Password Policy
• AWS CLI: manage your AWS services using the command-line
• AWS SDK: manage your AWS services using a programming language
• Access Keys: access AWS using the CLI or SDK
• Audit: IAM Credential Reports & IAM Access Advisor

-------------------------------------------------------------------
EC2 = Elastic Compute Cloud = Infrastructure as a Service
-------------------------------------------------------------------

It mainly consists in the capability of :
	• Renting virtual machines (EC2)
	• Storing data on virtual drives (EBS)
	• Distributing load across machines (ELB)
	• Scaling the services using an auto-scaling group (ASG)
	
• Operating System (OS): Linux, Windows or Mac OS
• How much compute power & cores (CPU)
• How much random-access memory (RAM)
• How much storage space:
• Network-attached (EBS & EFS)
• hardware (EC2 Instance Store)
• Network card: speed of the card, Public IP address
• Firewall rules: security group
• Bootstrap script (configure at first launch): EC2 User Data

EC2 user data is used to automate boot tasks such as:
• Installing updates
• Installing software
• Downloading common files from the internet
• Anything you can think of

EC2 Instances Purchasing Options
	• On-Demand Instances – short workload, predictable pricing, pay by second
	• Reserved (1 & 3 years)
	• Reserved Instances – long workloads
	• Convertible Reserved Instances – long workloads with flexible instances
	• Savings Plans (1 & 3 years) –commitment to an amount of usage, long workload
	• Spot Instances – short workloads, cheap, can lose instances (less reliable)
	• Dedicated Hosts – book an entire physical server, control instance placement
	• Dedicated Instances – no other customers will share your hardware
	• Capacity Reservations – reserve capacity in a specific AZ for any duration
	
Shared Responsibility Model for EC2
AWS
	• Infrastructure (global network security)
	• Isolation on physical hosts
	• Replacing faulty hardware
	• Compliance validation
User
	• Security Groups rules
	• Operating-system patches and updates
	• Software and utilities installed on the EC2 instance
	• IAM Roles assigned to EC2 & IAM user access management
	• Data security on your instance
	
EC2 Section – Summary
	• EC2 Instance: AMI (OS) + Instance Size (CPU + RAM) + Storage + security groups + EC2 User Data
	• Security Groups: Firewall attached to the EC2 instance
	• EC2 User Data: Script launched at the first start of an instance
	• SSH: start a terminal into our EC2 Instances (port 22)
	• EC2 Instance Role: link to IAM roles
	• Purchasing Options: On-Demand, Spot, Reserved (Standard + Convertible + Scheduled), Dedicated Host, Dedicated Instance
	
-------------------------------------------------------------------
EC2 Instance Storage Section
-------------------------------------------------------------------	

EBS (Elastic Block Store)

EBS Volume
• It’s a network drive (i.e. not a physical drive)
• It uses the network to communicate the instance, which means there might be a bit of latency
• It can be detached from an EC2 instance and attached to another one quickly
• It’s locked to an Availability Zone (AZ)
• An EBS Volume in us-east-1a cannot be attached to us-east-1b
• To move a volume across, you first need to snapshot it
• Have a provisioned capacity (size in GBs, and IOPS)
• You get billed for all the provisioned capacity
• You can increase the capacity of the drive over time

EBS Snapshots
• Make a backup (snapshot) of your EBS volume at a point in time
• Not necessary to detach volume to do snapshot, but recommended
• Can copy snapshots across AZ or Region

AMI = Amazon Machine Image

AMI Process (from an EC2 instance)
• Start an EC2 instance and customize it
• Stop the instance (for data integrity)
• Build an AMI – this will also create EBS snapshots
• Launch instances from other AMIs

EC2 Image Builder
• Used to automate the creation of Virtual Machines or container images
• => Automate the creation, maintain, validate and test EC2 AMIs
• Free service (only pay for the underlying resources)

EC2 Instance Store
• EBS volumes are network drives with good but “limited” performance
• If you need a high-performance hardware disk, use EC2 Instance Store
• Better I/O performance
• EC2 Instance Store lose their storage if they’re stopped (ephemeral)
• Good for buffer / cache / scratch data / temporary content
• Risk of data loss if hardware fails
• Backups and Replication are your responsibility

EFS – Elastic File System

• Managed NFS (network file system) that can be mounted on 100s of EC2
• EFS works with Linux EC2 instances in multi-AZ
• Highly available, scalable, expensive (3x gp2), pay per use, no capacity planning

EFS Infrequent Access (EFS-IA)
• Storage class that is cost-optimized for files not accessed every day
• Up to 92% lower cost compared to EFS Standard
• EFS will automatically move your files to EFS-IA based on the last time they were accessed
• Enable EFS-IA with a Lifecycle Policy
• Example: move files that are not accessed for 60 days to EFS-IA
• Transparent to the applications accessing EFS

Shared Responsibility Model for EC2 Storage
AWS
• Infrastructure
• Replication for data for EBS volumes & EFS drives
• Replacing faulty hardware
• Ensuring their employees cannot access your data
User
• Setting up backup / snapshot procedures
• Setting up data encryption
• Responsibility of any data on the drives
• Understanding the risk of using EC2 Instance Store

Amazon FSx – Overview
• Launch 3rd party high-performance file systems on AWS
• Fully managed service

Amazon FSx for Windows File Server
• Built on Windows File Server
• Supports SMB protocol & Windows NTFS
• Integrated with Microsoft Active Directory
• Can be accessed from AWS or your on-premise infrastructure

Amazon FSx for Lustre
• A fully managed, high-performance, scalable file storage for High Performance Computing (HPC)
• The name Lustre is derived from “Linux” and “cluster”
• Machine Learning, Analytics, Video Processing, Financial Modeling, …
• Scales up to 100s GB/s, millions of IOPS, sub-ms latencies

EC2 Instance Storage - Summary
• EBS volumes:
• network drives attached to one EC2 instance at a time
• Mapped to an Availability Zones
• Can use EBS Snapshots for backups / transferring EBS volumes across AZ
• AMI: create ready-to-use EC2 instances with our customizations
• EC2 Image Builder: automatically build, test and distribute AMIs
• EC2 Instance Store:
• High performance hardware disk attached to our EC2 instance
• Lost if our instance is stopped / terminated
• EFS: network file system, can be attached to 100s of instances in a region
• EFS-IA: cost-optimized storage class for infrequent accessed files
• FSx for Windows: Network File System for Windows servers
• FSx for Lustre: High Performance Computing Linux file system